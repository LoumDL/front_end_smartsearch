// api/chat.ts
export default {
  // ‚úÖ Utilise les nouvelles routes simplifi√©es
  baseUrl: '/api',

  async sendTextMessage(question: string) {
    try {
      const fullUrl = `${this.baseUrl}/smartsearch-text`
      console.log('üì§ URL Proxy simplifi√©e:', fullUrl)
      
      const response = await $fetch(fullUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: { question },
      })
     
      console.log('‚úÖ R√©ponse re√ßue via proxy:', response)
      return response
    } catch (error: any) {
      console.error('‚ùå Erreur proxy simplifi√©:', error)
      throw error
    }
  },
 
  async sendMultimodalMessage(prompt: string, file: File) {
    try {
      const fullUrl = `${this.baseUrl}/smartsearch-multimodal`
      console.log('üì§ URL Proxy multimodal simplifi√©e:', fullUrl)
      console.log('üìÅ Fichier √† envoyer:', file.name, 'Taille:', file.size)
      
      const formData = new FormData()
      formData.append('prompt', prompt)
      formData.append('file', file)
     
      const response = await $fetch(fullUrl, {
        method: 'POST',
        body: formData,
      })
     
      console.log('‚úÖ R√©ponse multimodal re√ßue:', response)
      return response
    } catch (error: any) {
      console.error('‚ùå Erreur proxy multimodal:', error)
      throw error
    }
  },
 
  async getConversationHistory() {
    return { conversations: [] }
  }
}